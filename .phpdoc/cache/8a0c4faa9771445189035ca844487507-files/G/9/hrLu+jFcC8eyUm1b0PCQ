1749349843
8a0c4faa9771445189035ca844487507-phpdoc%3A8f12a565abb88fbd22230649ad778bc8-1d60dedb242965cdbc83dea5569ad587
s:57032:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:26:"parse_query_parameters.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:4:{s:25:"\parse_query_parameters()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:12:"query_params";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:35;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:64;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\parse_query_parameters()";s:36:" phpDocumentor\Reflection\Fqsen name";s:22:"parse_query_parameters";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:22:"Parse Query Parameters";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:16:"from $_GET array";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"query_params";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:64:"parsed clauses and conditions(filters) and remaining query array";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:47:"phpDocumentor\Reflection\PseudoTypes\ArrayShape":1:{s:54:" phpDocumentor\Reflection\PseudoTypes\ArrayShape items";a:3:{i:0;O:51:"phpDocumentor\Reflection\PseudoTypes\ArrayShapeItem":3:{s:51:" phpDocumentor\Reflection\PseudoTypes\ShapeItem key";s:7:"clauses";s:53:" phpDocumentor\Reflection\PseudoTypes\ShapeItem value";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:56:" phpDocumentor\Reflection\PseudoTypes\ShapeItem optional";b:0;}i:1;O:51:"phpDocumentor\Reflection\PseudoTypes\ArrayShapeItem":3:{s:51:" phpDocumentor\Reflection\PseudoTypes\ShapeItem key";s:7:"filters";s:53:" phpDocumentor\Reflection\PseudoTypes\ShapeItem value";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:56:" phpDocumentor\Reflection\PseudoTypes\ShapeItem optional";b:0;}i:2;O:51:"phpDocumentor\Reflection\PseudoTypes\ArrayShapeItem":3:{s:51:" phpDocumentor\Reflection\PseudoTypes\ShapeItem key";s:5:"query";s:53:" phpDocumentor\Reflection\PseudoTypes\ShapeItem value";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:56:" phpDocumentor\Reflection\PseudoTypes\ShapeItem optional";b:0;}}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:19:"\parseQueryFields()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:12:"query_params";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:1;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:72;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:110;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:19:"\parseQueryFields()";s:36:" phpDocumentor\Reflection\Fqsen name";s:16:"parseQueryFields";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:12:"Parse Fields";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:20:"Passed by REFERENCE;";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"query_params";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:38:"Array of column names; Default === [*]";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:20:"\parseQueryClauses()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:12:"query_params";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:1;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:120;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:345;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\parseQueryClauses()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"parseQueryClauses";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:122:"Parse Query Clauses
- Finds LIMIT, HAVING, ORDER BY, etc...
- Does NOT parse WHERE! WHERE evaluated in parseQueryFilters()";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:32:"from $_GET; Passed BY REFERENCE!";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"query_params";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:33:"Clauses from query parameter keys";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:20:"\parseQueryFilters()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:12:"query_params";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:1;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:357;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:429;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\parseQueryFilters()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"parseQueryFilters";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:19:"Parse Query Filters";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:32:"from $_GET; Passed BY REFERENCE!";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:12:"query_params";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:18:"Filters from $_GET";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:47:"phpDocumentor\Reflection\PseudoTypes\ArrayShape":1:{s:54:" phpDocumentor\Reflection\PseudoTypes\ArrayShape items";a:3:{i:0;O:51:"phpDocumentor\Reflection\PseudoTypes\ArrayShapeItem":3:{s:51:" phpDocumentor\Reflection\PseudoTypes\ShapeItem key";s:5:"param";s:53:" phpDocumentor\Reflection\PseudoTypes\ShapeItem value";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:56:" phpDocumentor\Reflection\PseudoTypes\ShapeItem optional";b:0;}i:1;O:51:"phpDocumentor\Reflection\PseudoTypes\ArrayShapeItem":3:{s:51:" phpDocumentor\Reflection\PseudoTypes\ShapeItem key";s:8:"operator";s:53:" phpDocumentor\Reflection\PseudoTypes\ShapeItem value";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:56:" phpDocumentor\Reflection\PseudoTypes\ShapeItem optional";b:0;}i:2;O:51:"phpDocumentor\Reflection\PseudoTypes\ArrayShapeItem":3:{s:51:" phpDocumentor\Reflection\PseudoTypes\ShapeItem key";s:6:"values";s:53:" phpDocumentor\Reflection\PseudoTypes\ShapeItem value";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}s:56:" phpDocumentor\Reflection\PseudoTypes\ShapeItem optional";b:0;}}}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:2:{s:16:"\QUERY_DELIMITER";O:37:"phpDocumentor\Reflection\Php\Constant":9:{s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:11;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Constant endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:11;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\QUERY_DELIMITER";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"QUERY_DELIMITER";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:18:"Constant Variables";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:0:{}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:44:" phpDocumentor\Reflection\Php\Constant value";s:3:"":"";s:44:" phpDocumentor\Reflection\Php\Constant final";b:0;s:47:" phpDocumentor\Reflection\Php\Constant metadata";a:0:{}s:49:" phpDocumentor\Reflection\Php\Constant attributes";a:0:{}}s:16:"\QUERY_OPERATORS";O:37:"phpDocumentor\Reflection\Php\Constant":9:{s:47:" phpDocumentor\Reflection\Php\Constant location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:12;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Constant endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:23;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:49:" phpDocumentor\Reflection\Php\Constant visibility";O:39:"phpDocumentor\Reflection\Php\Visibility":1:{s:51:" phpDocumentor\Reflection\Php\Visibility visibility";s:6:"public";}s:44:" phpDocumentor\Reflection\Php\Constant fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:16:"\QUERY_OPERATORS";s:36:" phpDocumentor\Reflection\Fqsen name";s:15:"QUERY_OPERATORS";}s:47:" phpDocumentor\Reflection\Php\Constant docBlock";N;s:44:" phpDocumentor\Reflection\Php\Constant value";s:157:"['_ne' => '!=', '_lt' => '<', '_lte' => '<=', '_gt' => '>', '_gte' => '>=', '_like' => 'LIKE', '_in' => 'IN', '_as' => 'AS', '_before' => '', '_after' => '']";s:44:" phpDocumentor\Reflection\Php\Constant final";b:0;s:47:" phpDocumentor\Reflection\Php\Constant metadata";a:0:{}s:49:" phpDocumentor\Reflection\Php\Constant attributes";a:0:{}}}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"1d60dedb242965cdbc83dea5569ad587";s:39:" phpDocumentor\Reflection\Php\File path";s:41:"src/utils/http/parse_query_parameters.php";s:41:" phpDocumentor\Reflection\Php\File source";s:15528:"<?php
    /**
     * Utility Properties for all Controller Classes/Objects
     * @since 04/25/25
     */
    /*----------------------------------------------------------*/
     /**
     * Constant Variables
     */
    /*----------------------------------------------------------*/
    define('QUERY_DELIMITER', ":");
    define('QUERY_OPERATORS', [
        '_ne'       => '!=',
        '_lt'       => '<',
        '_lte'      => '<=',
        '_gt'       => '>',
        '_gte'      => '>=',
        '_like'     => 'LIKE',
        '_in'       => 'IN',
        '_as'       => 'AS',
        '_before'   => '',
        '_after'    => '',
    ]);
    /*----------------------------------------------------------*/
    /**
     * Parse Query Parameters
     * @param array $query_params from $_GET array
     * @return array{
     *      clauses: array,
     *      filters: array,
     *      query: array
     * } parsed clauses and conditions(filters) and remaining query array
     */
    /*----------------------------------------------------------*/
    function parse_query_parameters(array $query_params){
        /**
         * Extract Query Fields
         */
        $fields = parseQueryFields($query_params);
        /**
         * Extract Query Clauses:
         * - $query_params passed by reference!
         */
        $clauses = parseQueryClauses($query_params);
        /**
         * Extract Query Filters:
         * - Declare $filters array
         * - Check remaining Query Params are not empty
         * - Parse Filters
         */
        $filters = [];
        if(!empty($query_params)){
            $filters = parseQueryFilters($query_params);
        }
        /**
         * Return Array
         */
        return [
            'fields'    => $fields,
            'filters'   => $filters,
            'clauses'   => $clauses,
            'query'     => $query_params
        ];
    }
    /*----------------------------------------------------------*/
    /**
     * Parse Fields
     * @param array $query_params Passed by REFERENCE;
     * @return array Array of column names; Default === [*]
     */
    /*----------------------------------------------------------*/
    function parseQueryFields(array &$query_params){
        /**
         * Search Query parameters for "fields" key:
         * - Declare $results array
         * - Check for 'fields' $_GET parameter
         * - Return $results
         */
        $results = [];
        if(array_key_exists("fields", $query_params)){
            // Grab values
            $values = $query_params['fields'];
            // Check for delimiter
            $pos = strpos($values, ",");
            if(is_int($pos)){
                // explode and assign
                foreach(explode(",", $values) as $field){
                    $results[] = trim($field);
                }
            } else {
                /**
                 * Assign $results
                 */
                $results[] = $values;
            }
            /**
             * Unset "Fields" from Query Parameters
             */
            unset($query_params['fields']);
        } else {
            /**
             * Assign Default Default
             */
            $results[] = '*';
        }
        /**
         * Return results
         */
        return $results;
    }
    /*----------------------------------------------------------*/
    /**
     * Parse Query Clauses 
     * - Finds LIMIT, HAVING, ORDER BY, etc... 
     * - Does NOT parse WHERE! WHERE evaluated in parseQueryFilters()
     * @param array $query_params from $_GET; Passed BY REFERENCE!
     * @return array Clauses from query parameter keys
     */
    /*----------------------------------------------------------*/
    function parseQueryClauses(array &$query_params){
        /**
         * Extract Clauses from Query Parameter Keys
         * - Split off keys: "sort" and "orderby"
         * - TODO: Manage LIMIT, HAVING, OFFSET
         * - Declare container $clauses
         * - Unset keys from reference arrays
         */
        $clauses = [];
        /**
         * Sort
         */
        $clause = "sort";
        if(array_key_exists($clause, $query_params)){
            $clauses[$clause][] = $query_params[$clause];
            unset($query_params[$clause]);
        }
        /**
         * ORDER BY
         */
        $clause = "orderBy";
        if(array_key_exists($clause, $query_params)){
            $clauses[$clause][] = $query_params[$clause];
            unset($query_params[$clause]);
        }
        /**
         * LIMIT
         */
        $clause = "limit";
        if(array_key_exists($clause, $query_params)){
            $clauses[$clause][] = $query_params[$clause];
            unset($query_params[$clause]);
        }
        /**
         * HAVING
         */
        $clause = "having";
        if(array_key_exists($clause, $query_params)){
            $clauses[$clause][] = $query_params[$clause];
            unset($query_params[$clause]);
        }
        /**
         * OFFSET
         */
        $clause = "offset";
        if(array_key_exists($clause, $query_params)){
            $clauses[$clause][] = $query_params[$clause];
            unset($query_params[$clause]);
        }
        /**
         * Merge "SORT" keys with "ORDER BY" keys
         * - Merge
         * - Unset "SORT"
         */
        if(array_key_exists('sort', $clauses)){
            /**
             * Check for orderBy to determine merge
             */
            if(array_key_exists('orderBy', $clauses)){
                $clauses['orderBy'] = array_merge($clauses['orderBy'], $clauses['sort']);
            } else {
                $clauses['orderBy'] = $clauses['sort'];
            }
            // Unset Sort from clauses array
            unset($clauses['sort']);
        }
        /**
         * Search for SQL Clause indicators in Query Parameter Values
         * - Copy $query_params for loop
         * - Find string position of delimiter
         * - Validate sorting direction
         * - Append to Clauses array
         * - Replace Query Param item if found
         */
        $query_arr = $query_params;
        foreach($query_arr as $param => $values){
            /**
             * Evaluate Param (key)
             * - Find position
             * - Split into key (prefix) and modifier (suffix)
             * - Validate modifier
             * - Unset $query_params key
             * - Replace with stripped $prefix and original values
             */
            $pos_key = strpos($param, QUERY_DELIMITER);
            if(is_int($pos_key)){
                // Split param
                $prefix = substr($param, 0, $pos_key);
                $suffix = strtoupper(substr($param, $pos_key + 1));
                // Validate modifier
                if($suffix === "ASC" || $suffix === "DESC"){
                    // Append to ORDER BY
                    $clauses['orderBy'][] = $param;
                    // Replace $query_param item
                    unset($query_params[$param]);
                    $query_params[$prefix] = $values;
                }
            }
            /**
             * Evaluate Values
             * - Find position of delimiter
             * - Split into value : modifier
             * - Validate modifier
             * - Parse param for operators (e.g. _gte, _lt...)
             * - Append to Clauses
             * - Replace value in $query_params
             */
            $pos_val = strpos($values, QUERY_DELIMITER);
            if(is_int($pos_val)){
                // Split values into val and modifier
                $prefix = substr($values, 0, $pos_val);
                $suffix = strtoupper(substr($values, $pos_val + 1));
                // Validate modifier
                if($suffix === "ASC" || $suffix === "DESC"){
                    /**
                     * Evaluate $param for operators (_gte, _lt,...)
                     * - Declare column from $param
                     * - Find last underscore position
                     * - Find match in OPERATORS
                     * - Strip and append to $clauses
                     * - Replace $query_params value with original $param and stripped value ($prefix)
                     */
                    $column = $param;
                    $op_pos = strrpos($param, '_');
                    if(is_int($op_pos)){
                        // Grab last underscored pos
                        $operator = substr($param, $op_pos);
                        // Validate is operator
                        if(in_array($operator, array_keys(QUERY_OPERATORS))){
                            // Rename $column
                            $column = substr($param, 0, $op_pos);
                        } else {
                            // $operator portion is part of the parameter
                            $column = $param;
                        }
                    }
                    // Append to ORDER BY
                    $clauses['orderBy'][] = "{$column}:{$suffix}";
                    // Replace $query_param item
                    $query_params[$param] = $prefix;
                }
            }
        }
        /**
         * Perform Filtering on Clauses
         * - Declare results array
         * - Search for missing sort direction
         * - Parse lists
         * - Arrange $clauses array in key => value order
         */
        $results = [];
        foreach($clauses as $clause => $values){
            /**
             * Evaluate based on Clause sub-array
             */
            switch($clause){
                /**
                 * ORDER BY
                 */
                case 'orderBy':
                    // Declare container
                    $results['orderBy'] = [];
                    // Loop values
                    foreach($values as $value){
                        /**
                         * Check value is a comma separated list
                         */
                        $pos_comma = strpos($value, ',');
                        if(is_int($pos_comma)){
                            /**
                             * Value is a list:
                             * - Explode
                             * - Loop
                             * - Validate
                             */
                            $list = explode(',', $value);
                            foreach($list as $val){
                                // Search for delimiter
                                $pos = strpos($val, QUERY_DELIMITER);
                                if(is_int($pos)){
                                    $param  = trim(substr($val, 0, $pos));
                                    $dir    = trim(strtoupper(substr($val, $pos + 1)));
                                    // Validate direction
                                    if($dir === "ASC" || $dir === "DESC"){
                                        $results['orderBy'][$param] = $dir;
                                    }
                                } else {
                                    // Missing default value
                                    $results['orderBy'][$val] = "ASC";
                                }
                            }
                        } else {
                            /**
                             * Value NOT a list:
                             * - Validate: check for delimiter
                             * - Assign defaults
                             */
                            $pos = strpos($value, QUERY_DELIMITER);
                            if(is_int($pos)){
                                // Split
                                $param   = substr($value, 0, $pos);
                                $dir     = strtoupper(substr($value, $pos + 1));
                                // Validate direction
                                if($dir === "ASC" || $dir === "DESC"){
                                    $results['orderBy'][$param] = $dir;
                                }
                            } else {
                                // Missing default value
                                $results['orderBy'][$value] = "ASC";
                            }
                        }
                    }
                    break;
                /**
                 * Default
                 */
                default: 
                    $results[$clause] = $values;
                    break;
            }
        }
        /**
         * Return clauses array and modified query array
         */
        return $results;
    }
    /*----------------------------------------------------------*/
    /**
     * Parse Query Filters
     * @param array $query_params from $_GET; Passed BY REFERENCE!
     * @return array{
     *      param: string,
     *      operator: string,
     *      values: array<string>
     * } Filters from $_GET
     */
    /*----------------------------------------------------------*/
    function parseQueryFilters(array &$query_params){
        /**
         * Perform Filtering on Query Parameters:
         * - Copy query params for loop
         * - Declare results array
         * - Parse Lists
         * - Parse Operators
         * - Unset $query_params
         */
        $query_arr  = $query_params;
        $results    = [];
        foreach($query_arr as $key => $value){
            /**
             * Search params for operators:
             * - Declare default operator
             * - Find position last underscore
             * - Validate last_underscore substring
             * - Define $parameter
             * - Define $operator
             * - Define values
             */
            $operator   = '=';
            $op_pos     = strrpos($key, '_');
            if(is_int($op_pos)){
                // Split
                $parameter       = trim(substr($key, 0, $op_pos));
                $last_underscore = trim(substr($key, $op_pos));
                // Validate operator
                if(in_array($last_underscore, array_keys(QUERY_OPERATORS))){
                    $operator = QUERY_OPERATORS[$last_underscore];
                } else {
                    // last underscore is part of the parameter
                    $parameter = $key;
                }
            } else {
                // Define parameter
                $parameter = $key;
            }
            // Declare parameter array
            $results[$parameter] = [
                'operator'  => $operator,
                'values'    => []
            ];
            /**
             * Check for $value delimiter
             */
            $pos_comma = strpos($value, ",");
            if(is_int($pos_comma)){
                /**
                 * Multiple values:
                 * - Explode and loop
                 * - Append to parameter array
                 */
                foreach(explode(',', $value) as $val){
                    $results[$parameter]['values'][] = $val;
                }
            } else {
                /**
                 * Singular value:
                 * - Append to parameter array
                 */
                $results[$parameter]['values'] = $value;
            }
            /**
             * Unset from $query_params array
             */
            unset($query_params[$key]);
        }
        /**
         * Return $results array
         */
        return $results;
    }
?>";s:43:" phpDocumentor\Reflection\Php\File docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:53:"Utility Properties for all Controller Classes/Objects";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:1:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Since":3:{s:7:" * name";s:5:"since";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:53:" phpDocumentor\Reflection\DocBlock\Tags\Since version";s:8:"04/25/25";}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";