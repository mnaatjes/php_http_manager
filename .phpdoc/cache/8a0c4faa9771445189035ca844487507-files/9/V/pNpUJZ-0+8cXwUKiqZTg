1749349843
8a0c4faa9771445189035ca844487507-phpdoc%3Acbb36779b2b9f9d5834565ff55f7a5a0-a9f2a8b2bb2d2bbb8cd1b1676ebdf844
s:41940:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:24:"sanitize_server_data.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:2:{s:23:"\sanitize_server_data()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:39:"phpDocumentor\Reflection\Types\Nullable":1:{s:49:" phpDocumentor\Reflection\Types\Nullable realType";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"config";s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"null";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:11;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:52;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:39:"phpDocumentor\Reflection\Types\Nullable":1:{s:49:" phpDocumentor\Reflection\Types\Nullable realType";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:23:"\sanitize_server_data()";s:36:" phpDocumentor\Reflection\Fqsen name";s:20:"sanitize_server_data";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:130:"Sanitizes, Filters, and Validates the $_SERVER superglobal:
- Validates array existence
- Filters and sanitizes values by datatype";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:2:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:89:"Configuration array containing valid parameters; e.g. valid_methods => ['GET', 'POST'...]";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}i:1;O:36:"phpDocumentor\Reflection\Types\Null_":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"config";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:28:"Array of $_SERVER properties";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}i:1;O:36:"phpDocumentor\Reflection\Types\Null_":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}s:27:"\sanitize_server_property()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:3:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:9:"prop_name";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:5:"value";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:2;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:39:"phpDocumentor\Reflection\Types\Nullable":1:{s:49:" phpDocumentor\Reflection\Types\Nullable realType";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"config";s:46:" phpDocumentor\Reflection\Php\Argument default";s:4:"null";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:64;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:402;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:39:"phpDocumentor\Reflection\Types\Nullable":1:{s:49:" phpDocumentor\Reflection\Types\Nullable realType";O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:27:"\sanitize_server_property()";s:36:" phpDocumentor\Reflection\Fqsen name";s:24:"sanitize_server_property";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:44:"Sanitize $_SERVER superglobal key and value.";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:90:"- Filters and validates $_SERVER property by property name
- Employs sanitize_data methods";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:4:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:29:"Key name of $_SERVER property";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:9:"prop_name";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:33:"Value string of $_SERVER property";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:5:"value";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:2;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:89:"Configuration array containing valid parameters; e.g. valid_methods => ['GET', 'POST'...]";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}i:1;O:36:"phpDocumentor\Reflection\Types\Null_":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"config";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:3;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:34:"[$prop => $value], Null on failure";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:37:"phpDocumentor\Reflection\Types\Array_":3:{s:12:" * valueType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:10:" * keyType";N;s:17:" * defaultKeyType";O:39:"phpDocumentor\Reflection\Types\Compound":2:{s:52:" phpDocumentor\Reflection\Types\AggregatedType types";a:2:{i:0;O:38:"phpDocumentor\Reflection\Types\String_":0:{}i:1;O:38:"phpDocumentor\Reflection\Types\Integer":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}i:1;O:36:"phpDocumentor\Reflection\Types\Null_":0:{}}s:52:" phpDocumentor\Reflection\Types\AggregatedType token";s:1:"|";}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"a9f2a8b2bb2d2bbb8cd1b1676ebdf844";s:39:" phpDocumentor\Reflection\Php\File path";s:39:"src/utils/http/sanitize_server_data.php";s:41:" phpDocumentor\Reflection\Php\File source";s:16598:"<?php
    /*----------------------------------------------------------*/
    /**
     * Sanitizes, Filters, and Validates the $_SERVER superglobal:
     * - Validates array existence
     * - Filters and sanitizes values by datatype
     * @param array|null $config Configuration array containing valid parameters; e.g. valid_methods => ['GET', 'POST'...]
     * @return array|null Array of $_SERVER properties
     */
    /*----------------------------------------------------------*/
    function sanitize_server_data(?array $config=null): ?array{
        /**
         * Validate existence of $_SERVER superglobal and length
         */
        if(!isset($_SERVER)){
            return null;
        }
        if(empty($_SERVER)){
            return null;
        }
        if(!is_array($_SERVER)){
            return null;
        }
        /**
         * @var array $results Array to contain parsed $_SERVER properties
         */
        $results = [];
        /**
         * Loop $_SERVER properties
         * - Sanitize and Validate
         * - Format keys and values
         * - Output array of [$key, $val] and push to $results
         */
        foreach($_SERVER as $key => $value){
            /**
             * Sanitize
             */
            $sanitized = sanitize_server_property($key, $value, $config);
            /**
             * Merge sanitized and formatted key, value array with $results
             */
            $results = array_merge($results, $sanitized);
        }
        /**
         * Validate results
         * Return Default
         */
        if(empty($results)){
            return null;
        }
        return $results;
    }
    /*----------------------------------------------------------*/
    /**
     * Sanitize $_SERVER superglobal key and value.
     * - Filters and validates $_SERVER property by property name
     * - Employs sanitize_data methods
     * @param string $prop_name Key name of $_SERVER property
     * @param string $value Value string of $_SERVER property
     * @param array|null $config Configuration array containing valid parameters; e.g. valid_methods => ['GET', 'POST'...]
     * @return array|null [$prop => $value], Null on failure
     */
    /*----------------------------------------------------------*/
    function sanitize_server_property(string $prop_name, string $value, ?array $config=null): ?array{
        /**
         * Validate Non-Strings
         */
        if(!is_string($value)){
            switch(strtoupper($prop_name)){
            /*----------------------------------------------------------*/
            /**
             * Arguments Properties:
             * - Check $config if allowed
             */
            /*----------------------------------------------------------*/
            case 'ARGV':
            case 'ARGC':
                /**
                 * Set default / config values for validation
                 */
                $allowed    = isset($config['arguments']) ? false : true;
                $arg_length = !isset($config['arguments']['length']) ? 2 : $config['arguments']['length'];
                /**
                 * Abort if not allowed
                 */
                if($allowed === false){
                    return [$prop_name => null];
                } else if ($allowed === true){
                    /**
                     * ARGS Allowed:
                     * - Check Array
                     * - Check Int
                     */
                    if($prop_name === 'ARGV' && !is_array($value)){
                        // Invalid Data Type
                        return [$prop_name => null];
                    }
                    /**
                     * Validate ARGC Int Value
                     */
                    if($prop_name === 'ARGC'){
                        // Check data-type
                        if(!is_numeric($value)){
                            // Invalid Data Type
                            return [$prop_name => null];
                        } else {
                            // Cast as int
                            $args = is_int($value) ? $value : intval($value);
                            if($args !== $arg_length){
                                // Invalid length
                                return [$prop_name => null];
                            } else if ($args === $arg_length){
                                // Valid ARGC
                                return [$prop_name => $value];
                            }
                        }
                    }
                }
            /*----------------------------------------------------------*/
            /**
             * Default (Non-String)
             */
            /*----------------------------------------------------------*/
            default: 
                return [$prop_name => null];
            }
        }
        /**
         * Validate Strings
         * Switch property based on $prop name
         */
        switch(strtoupper($prop_name)){
            /*----------------------------------------------------------*/
            /**
             * Filepath Properties
             * - Filter and Sanitize
             * - Implement preg-match
             */
            /*----------------------------------------------------------*/
            case 'PHP_SELF':
            case 'DOCUMENT_ROOT':
            case 'SCRIPT_NAME':
            case 'PATH_INFO':
            case 'PATH_TRANSLATED':
                // Trim value and Strip Tags
                $value      = strip_tags(trim($value));
                $filtered   = filter_var($value, FILTER_VALIDATE_URL);
                $sanitized  = filter_var($value, FILTER_SANITIZE_URL);
                /**
                 * Check for filepath characteristics
                 */
                if(!preg_match('/^[a-zA-Z0-9\/._-]+$/', $value)){
                    // Not a valid filepath
                    return [$prop_name => null];
                }
                /**
                 * Check filepaths: PHP_SELF, SCRIPT_NAME
                 * - Has extension
                 */
                if($prop_name === 'SCRIPT_NAME' || $prop_name === 'PHP_SELF'){
                    if(!is_int(strpos($value, '.'))){
                        // Return as null - Missing file extension
                        return [$prop_name => null];
                    }
                }
                /**
                 * Return sanitized value
                 */
                return [$prop_name => $sanitized];
            /*----------------------------------------------------------*/
            /**
             * URL Properties:
             * - Run URL check
             * - On fail, check if filepath
             */
            /*----------------------------------------------------------*/
            case 'HTTP_REFERER':
            case 'REQUEST_URI':
            case 'REDIRECT_URL':
            case 'REDIRECT_QUERY_STRING':
                // Filter Property as URL
                $filtered = filter_var($value, FILTER_SANITIZE_URL);
                // Check if Filtered returned false
                if($filtered === false){
                    // Perform preg-match for filepath characters
                    if(!preg_match('/^[a-zA-Z0-9\/._-]+$/', $value)){
                        // Failed both tests
                        return [$prop_name => null];
                    } else {
                        // Sanitize URL/Path
                        $sanitized = filter_var($value, FILTER_SANITIZE_URL);
                        // Passed preg-match
                        return [$prop_name => $sanitized === false ? null : $sanitized];
                    }
                } else {
                    // Sanitize
                    $sanitized = filter_var($filtered, FILTER_SANITIZE_URL);
                    // Passed filter
                    return [$prop_name => $sanitized === false ? null : $sanitized];
                }
            /*----------------------------------------------------------*/
            /**
             * Domains: SERVER_NAME, HTTP_HOST, 
             * - Check URL
             * - Check Domain Name
             * - Check config set
             * - Check IP
             */
            /*----------------------------------------------------------*/
            case 'SERVER_NAME':
            case 'HTTP_HOST':
                // Trim
                $value = trim($value);
                if(empty($value)){
                    // MUST be a populated string!
                    return [$prop_name => null];
                }
                /**
                 * Set config values
                 */
                $valid_domains      = !isset($config['domains']) ? null : $config['domains'];
                $max_length_domain  = !isset($config['max_length_domain']) ? 255 : $config['max_length_domain'];
                // Check domain against array
                if(is_array($valid_domains) && !in_array($value, $valid_domains)){
                    // Domain is not valid
                    return [$prop_name => null];
                }
                // Check max length of value
                if(strlen($value) > $max_length_domain){
                    // Server Name improbably long
                    return [$prop_name => null];
                }
                /**
                 * Filter Domain
                 * Return server name
                 */
                $filtered = filter_var($value, FILTER_VALIDATE_DOMAIN);
                return [$prop_name => $filtered === false ? null : $filtered];
            /*----------------------------------------------------------*/
            /**
             * Protocol:
             * - Check $config
             * - Check against array
             */
            /*----------------------------------------------------------*/
            case 'SERVER_PROTOCOL': 
                $valid_protocols = !isset($config['protocols']) ?  VALID_HTTP_PROTOCOLS : $config['protocols'];
                if(!in_array(strtoupper($value), $valid_protocols)){
                    return [$prop_name => null];
                } else {
                    return [$prop_name => $value];
                }
            /*----------------------------------------------------------*/
            /**
             * Request Method:
             * - Check for config
             * - Check in array
             */
            /*----------------------------------------------------------*/
            case 'REQUEST_METHOD':
                // Check valid methods
                $valid_methods = !isset($config['methods']) ? VALID_HTTP_METHODS : $config['methods'];
                // Run check
                if(!in_array(strtoupper($value), $valid_methods)){
                    return [$prop_name => null];
                } else {
                    return [$prop_name => $value];
                }
            /*----------------------------------------------------------*/
            /**
             * IP Addresses:
             */
            /*----------------------------------------------------------*/
            case 'SERVER_ADDR':
            case 'REMOTE_ADDR':
                // Filter IP
                $value = filter_var($value, FILTER_VALIDATE_IP);
                // Test filter
                if($value === false){
                    return [$prop_name => null];
                } else {
                    return [$prop_name => $value];
                }
            /*----------------------------------------------------------*/
            /**
             * Time Properties:
             * - Set time tolerance
             * - Cast to int
             * - Validate range
             */
            /*----------------------------------------------------------*/
            case 'REQUEST_TIME':
            case 'REQUEST_TIME_FLOAT':
                // Set tolerance
                $tolerance  = !isset($config['tolerance']) ? 60 : $config['tolerance'];
                // Filter int value
                $filtered  = false;
                if($prop_name === 'REQUEST_TIME'){
                    $filtered = filter_var($value, FILTER_VALIDATE_INT);
                } else if($prop_name === 'REQUEST_TIME_FLOAT'){
                    $filtered = filter_var($value, FILTER_VALIDATE_FLOAT);
                }
                // Check for tolerance
                if(($filtered < $filtered - $tolerance) || ($filtered > $filtered + $tolerance)){
                    return [$prop_name => null];
                } else {
                    return [$prop_name => $filtered];
                }
            /*----------------------------------------------------------*/
            /**
             * Numeric Properties:
             * - Check if numeric
             * - Cast as int
             */
            /*----------------------------------------------------------*/
            case 'SERVER_PORT':
            case 'REMOTE_PORT':
            case 'CONTENT_LENGTH':
            case 'REDIRECT_STATUS':
                /**
                 * Validate Numeric
                 * Cast as int
                 * Check ranges
                 */
                if(!is_numeric($value)){
                    return [$prop_name => null];
                }
                /**
                 * Validate Ports:
                 * - Check for config value
                 * - Compare
                 */
                if($prop_name === 'SERVER_PORT' || $prop_name === 'REMOTE_PORT'){
                    $range = !isset($config['ports']) 
                            ? ['options' => ['min_range' => 1, 'max_range' => 65535]]
                            : ['options' => [
                                'min_range' => $config['ports']['min_range'],
                                'max_range' => $config['ports']['max_range']
                            ]];
                    $value = filter_var($value, FILTER_VALIDATE_INT, $range);
                    $value = $value === false ? null : $value;
                    return [$prop_name => $value];
                }
                /**
                 * Validate Content Length
                 * - Check for config value
                 * - Default: 10MB in bytes
                 * - Compare
                 */
                if($prop_name === 'CONTENT_LENGTH'){
                    $max_length_content  = !isset($config['max_length_content'])? (10 * 1024 * 1024) : $config['max_length_content'];
                    $value               = filter_var($value, FILTER_VALIDATE_INT);
                    if($value > $max_length_content){
                        return [$prop_name => null];
                    } else {
                        return [$prop_name => $value];
                    }
                }
                /**
                 * Validate status code
                 * - Cast to int
                 * - Check for $config setting
                 * - Check against VALID_HTTP_STATUS or Config
                 */
                if($prop_name === 'REDIRECT_STATUS'){
                    $value          = intval($value);
                    $valid_status   = !isset($config['status']) ? VALID_HTTP_STATUS : $config['status'];
                    if(!array_key_exists($value, $valid_status)){
                        return [$prop_name => null];
                    } else {
                        // Is valid status
                        return [$prop_name => $value];
                    }
                }
                /**
                 * Default
                 */
                return [$prop_name => null];
            /*----------------------------------------------------------*/
            /**
             * Default(String):
             * - Call sanitize_string() function
             */
            /*----------------------------------------------------------*/
            default: 
                /**
                 * Default string sanitation parameters (non-destructive):
                 * - Trim value
                 * - Set max length of string
                 */
                $value      = trim($value);
                $max_length = !isset($config['max_length'])? 2048 : $config['max_length'];
                if(strlen($value) > $max_length){
                    $value = null;
                }
                return [$prop_name => $value];
        }
        /**
         * Return default
         */
        return [$prop_name => null];
    }
?>";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";