1749349843
8a0c4faa9771445189035ca844487507-phpdoc%3A18d3c069b596b496b957cd996e5161fb-ae2354f00639950a3c87f454c5421368
s:14168:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:39:" phpDocumentor\Reflection\Php\File name";s:21:"get_file_mimetype.php";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:1:{s:20:"\get_file_mimetype()";O:38:"phpDocumentor\Reflection\Php\Function_":9:{s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:2:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:8:"filepath";s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}i:1;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:43:" phpDocumentor\Reflection\Php\Argument name";s:6:"strict";s:46:" phpDocumentor\Reflection\Php\Argument default";s:5:"false";s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:8;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:152;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:20:"\get_file_mimetype()";s:36:" phpDocumentor\Reflection\Fqsen name";s:17:"get_file_mimetype";}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";O:33:"phpDocumentor\Reflection\DocBlock":7:{s:42:" phpDocumentor\Reflection\DocBlock summary";s:97:"Determines the mime type (Content-Type) of a file from a given filepath and returns the mime type";s:46:" phpDocumentor\Reflection\DocBlock description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:39:" phpDocumentor\Reflection\DocBlock tags";a:3:{i:0;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:0:"";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:8:"filepath";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:1;O:44:"phpDocumentor\Reflection\DocBlock\Tags\Param":6:{s:7:" * name";s:5:"param";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:90:"- Default (false) relies upon extension | True: relies upon strict comparison of all modes";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\Boolean":0:{}s:58:" phpDocumentor\Reflection\DocBlock\Tags\Param variableName";s:6:"strict";s:56:" phpDocumentor\Reflection\DocBlock\Tags\Param isVariadic";b:0;s:57:" phpDocumentor\Reflection\DocBlock\Tags\Param isReference";b:0;}i:2;O:46:"phpDocumentor\Reflection\DocBlock\Tags\Return_":3:{s:7:" * name";s:6:"return";s:14:" * description";O:45:"phpDocumentor\Reflection\DocBlock\Description":2:{s:59:" phpDocumentor\Reflection\DocBlock\Description bodyTemplate";s:16:"File's mime type";s:51:" phpDocumentor\Reflection\DocBlock\Description tags";a:0:{}}s:7:" * type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}}}s:42:" phpDocumentor\Reflection\DocBlock context";O:38:"phpDocumentor\Reflection\Types\Context":2:{s:49:" phpDocumentor\Reflection\Types\Context namespace";s:0:"";s:56:" phpDocumentor\Reflection\Types\Context namespaceAliases";a:0:{}}s:43:" phpDocumentor\Reflection\DocBlock location";N;s:50:" phpDocumentor\Reflection\DocBlock isTemplateStart";b:0;s:48:" phpDocumentor\Reflection\DocBlock isTemplateEnd";b:0;}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}s:50:" phpDocumentor\Reflection\Php\Function_ attributes";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"ae2354f00639950a3c87f454c5421368";s:39:" phpDocumentor\Reflection\Php\File path";s:37:"src/utils/files/get_file_mimetype.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5153:"<?php
    /**
     * Determines the mime type (Content-Type) of a file from a given filepath and returns the mime type
     * @param string $filepath
     * @param bool $strict - Default (false) relies upon extension | True: relies upon strict comparison of all modes
     * @return string File's mime type
     */
    function get_file_mimetype(string $filepath, bool $strict=false){
        /**
         * Declare results array
         */
        $results = [
            'finfo'         => null,
            'mime_content'  => null,
            'from_ext'      => null,
            'shell'         => null
        ];
        /**
         * Attempt 1:
         * - Use finfo_open() to read mimetype
         */
        if(function_exists('finfo_open')){
            $finfo = finfo_open(FILEINFO_MIME_TYPE);
            if($finfo){
                $results['finfo'] = finfo_file($finfo, $filepath);
                finfo_close($finfo);
            }
        }
        /**
         * Attempt 2:
         * - Use mime_content_type()
         */
        if(function_exists('mime_content_type')){
            $results['mime_content'] = mime_content_type($filepath);
        }
        /**
         * Attempt 3:
         * - using get_file_extension() utils function
         * - compare with EXT_MIME_TYPES array
         */
        $extension           = get_file_extension($filepath);
        $results['from_ext'] = EXT_MIME_TYPES[$extension];
        /**
         * Attempt 4:
         * - using shell_exec()
         */
        if(function_exists('shell_exec')){
            /**
             * Try and catch
             */
            try {
                // Attempt shell_exec()
                $shell_output = trim(
                    shell_exec('file -b --mime-type ' . escapeshellarg($filepath))
                );
                // Evaluate for depreciated mime-types
                if(is_string($shell_output)){
                    if(isset(MIME_TYPES_DEPRECIATED[$shell_output])){
                        // replace depreciated mime-type
                        $results['shell'] = MIME_TYPES_DEPRECIATED[$shell_output];
                    } else {
                        // use shell output
                        $results['shell'] = $shell_output;
                    }
                }
            } catch (Throwable $err) {
                // Could not execute shell
                $results['shell'] = null;
            }
        }
        /**
         * Perform Evaluation
         */
        $unique = array_unique($results);
        $count  = is_array($unique) ? count($unique) : null;
        // Validate count
        if(!is_numeric($count)){
            // Could not determine mime-type
            return null;
        }
        /**
         * Check count
         */
        if($count === 1){
            /**
             * All values the same
             * Return value from unique array
             */
            return $unique[key($unique)];
        } else {
            /**
             * Check if any values are null
             * - Filter out null values
             * - Re-count
             */
            if(in_array(null, $unique, true)){
                // filter null
                $unique = array_filter($unique, function($value){
                    return !is_null($value);
                });
                // re-count
                $count = count($unique);
            }
            /**
             * Check re-count
             */
            if($count === 1){
                /**
                 * All values the same
                 * Return value from unique array
                 */
                return $unique[key($unique)];
            } else {
                /**
                 * Count greater than or less than 1
                 * - Determine strict level; if false continue | true return null
                 * - Evaluate
                 */
                if($strict === false){
                    /**
                     * Not strict-mode:
                     * - Filter array by file extension
                     * - Find unique value count
                     * - Return value on count === 1
                     */
                    $results = array_filter($results, function($value) use($extension){
                        if(strpos($value, $extension)){
                            return true;
                        }
                    });
                    // Find unique
                    $unique = array_unique($results);
                    // Count
                    $count  = count($unique);
                    // Evaluate
                    if(is_numeric($count) && $count === 1){
                        return $unique[key($unique)];
                    } else {
                        // Failure
                        return null;
                    }
                } else {
                    /**
                     * Strict mode:
                     * - Too many unique values
                     * - Return null
                     */
                    return null;
                }
            }
        }
    }

?>";s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";